"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1919],{65284:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(74848),s=t(28453);const o={title:"QA",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",slug:"/engineering/qa",keywords:["Jan","Customizable Intelligence","LLM","local AI","privacy focus","free and open source","private and offline","conversational AI","no-subscription fee","large language models"]},a=void 0,l={id:"how-we-work/engineering/qa",title:"QA",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",source:"@site/docs/how-we-work/engineering/qa.mdx",sourceDirName:"how-we-work/engineering",slug:"/engineering/qa",permalink:"/engineering/qa",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/docs/tree/main/docs/how-we-work/engineering/qa.mdx",tags:[],version:"current",lastUpdatedBy:"Nicole Zhu",lastUpdatedAt:1711818688,formattedLastUpdatedAt:"Mar 30, 2024",frontMatter:{title:"QA",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",slug:"/engineering/qa",keywords:["Jan","Customizable Intelligence","LLM","local AI","privacy focus","free and open source","private and offline","conversational AI","no-subscription fee","large language models"]},sidebar:"aboutSidebar",previous:{title:"CI & CD",permalink:"/engineering/ci-cd"},next:{title:"Product & Design",permalink:"/how-we-work/product-design"}},r={},d=[{value:"Phase 1: Planning",id:"phase-1-planning",level:3},{value:"Definition of Ready (DoR):",id:"definition-of-ready-dor",level:4},{value:"Definition of Done (DoD):",id:"definition-of-done-dod",level:4},{value:"Phase 2: Development",id:"phase-2-development",level:3},{value:"Definition of Ready (DoR):",id:"definition-of-ready-dor-1",level:4},{value:"Definition of Done (DoD):",id:"definition-of-done-dod-1",level:4},{value:"Phase 3: QA for feature",id:"phase-3-qa-for-feature",level:3},{value:"Definition of Ready (DoR):",id:"definition-of-ready-dor-2",level:4},{value:"Definition of Done (DoD):",id:"definition-of-done-dod-2",level:4},{value:"Phase 4: Release (DoR)",id:"phase-4-release-dor",level:3},{value:"Notes (WIP)",id:"notes-wip",level:3}];function c(e){const n={h3:"h3",h4:"h4",input:"input",li:"li",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"phase-1-planning",children:"Phase 1: Planning"}),"\n",(0,i.jsx)(n.h4,{id:"definition-of-ready-dor",children:"Definition of Ready (DoR):"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Scope Defined:"})," The features to be implemented are clearly defined and scoped out."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Requirements Gathered:"})," Gather and document all the necessary requirements for the feature."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Stakeholder Input:"})," Ensure relevant stakeholders have provided input on the document scope and content."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"definition-of-done-dod",children:"Definition of Done (DoD):"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Document Complete:"})," All sections of the document are filled out with relevant information."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Reviewed by Stakeholders:"})," The document has been reviewed and approved by stakeholders."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Ready for Development:"})," The document is in a state where developers can use it to begin implementation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"phase-2-development",children:"Phase 2: Development"}),"\n",(0,i.jsx)(n.h4,{id:"definition-of-ready-dor-1",children:"Definition of Ready (DoR):"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Task Breakdown:"})," The development team has broken down tasks based on the document."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Communication Plan:"})," A plan is in place for communication between developers and writers if clarification is needed during implementation."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Developer Understanding:"})," Developers have a clear understanding of the document content."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"definition-of-done-dod-1",children:"Definition of Done (DoD):"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Code Implementation:"})," The feature is implemented according to the document specifications."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Developer Testing:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Unit tests and basic integration tests are completed"}),"\n",(0,i.jsx)(n.li,{children:"Developer also completed self-testing for the feature (please add this as a comment in the ticket, with the tested OS and as much info as possible to reduce overlaping effort)."}),"\n",(0,i.jsx)(n.li,{children:"(AC -> Code Changes -> Impacted scenarios)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Communication with Writers:"})," Developers have communicated any changes or challenges to the writers, and necessary adjustments are made in the document. (Can be through a note in the PR of the feature for writers to take care, or create a separate PR with the change you made for the docs, for writers to review)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"phase-3-qa-for-feature",children:"Phase 3: QA for feature"}),"\n",(0,i.jsx)(n.h4,{id:"definition-of-ready-dor-2",children:"Definition of Ready (DoR):"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Test Note Defined:"})," The test note is prepared outlining the testing items."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Environment Ready:"})," PR merged to nightly build, Nightly build notes updated (automatically from pipeline after merged)."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Status:"})," Ticket moved to the column Testing and assigning to QA/writers to review."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Test Data Prepared:"})," Relevant test data is prepared for testing the scenarios."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"definition-of-done-dod-2",children:"Definition of Done (DoD):"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Test Executed:"})," All identified test items are executed on different OS, along with exploratory testing."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Defects Logged:"})," Any defects found during testing are resolved / appropriately logged (and approved for future fix)."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Test Sign-Off:"})," QA team provides sign-off indicating the completion of testing."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"phase-4-release-dor",children:"Phase 4: Release (DoR)"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Pre-release wait time:"})," Code change to pre-release version should be frozen for at least X (hrs/days) for Regression testing purpose.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pre-release cut off on Thu morning for the team to regression test."}),"\n",(0,i.jsx)(n.li,{children:"Release to production (Stable) during working hour on Mon morning (if no blocker) or Tue morning."}),"\n",(0,i.jsx)(n.li,{children:"During the release cut off, the nightly build will be paused, to leave room for pre-release build. The build version used for regression test will be notified."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Pre-release testing:"})," A review of the implemented feature has been conducted, a long with regression test (check-list) by the team.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Release checklist cloned from the templat for different OS (with hackMD link)"}),"\n",(0,i.jsx)(n.li,{children:"New key test items from new feature added to the checklist."}),"\n",(0,i.jsx)(n.li,{children:"Split 3 OS to different team members for testing."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Document Updated:"})," The document is updated based on the review and feedback on any discrepancies or modification needed for this release."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Reviewed by Stakeholders:"})," New feature and the updated document is reviewed and approved by stakeholders. The document is in its final version, reflecting the implemented feature accurately."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"notes-wip",children:"Notes (WIP)"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"API collection run:"})," to run along with nightly build daily, for critical API validation"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Automation run:"})," for regression testing purpose, to reduce manual testing effort for the same items each release on multiple OS."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);